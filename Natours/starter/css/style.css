@charset "UTF-8";
/*

I don't want you to memorize any of the techniques I'm showing you in the course. I want you to understand everything I do, and why I do what I do. I want you to be able to think about each and every thing you want to build, and then use the CSS according to that.

*/
/*
Now, we could put aaaaaalll the numbers and variables that we use in a project into Sass variables, things like z-indexes, font families and sizes, animation times, spacing, and much more. And that would actually be the best practice, because it would allow us to change the entire aspect of the website just from the variables file. For example if a client wants more spacing, or different colors, etc. But we're not going to do that for now, because I want to focus on teaching CSS for now, and not just on how to organzie a big project. We'll take a look at that later.

//USE MAPS AS WELL

//Z-INDEX VALUES
$zindex-header: 1000;
$zindex-dropdown: 1100;
$zindex-notify: 1300;
$zindex-modal: 1400;



//ANIMATION TIMES
$animation-time-1: .2s;


//SHADOWS



//BORDER RADIUS
$border-radius: 4px;
$border-radius-half: $border-radius / 2;
$border-radius-double: $border-radius * 2;



//FONTS
$font-primary: 'Lato', sans-serif;

$font-light: 300;
$font-normal: 400;
$font-bold: 700;

$font-sm: 90%;
$font-sm-x: 80%;
$font-lg: 110%;
$font-lg-x: 120%;

$line-height-sm: 1.2;
$line-height-lg: 1.7;


//SPACING
$spacing: .8rem;                //8px
$spacing-half: ($spacing / 2);  //4px
$spacing-2: ($spacing * 2);     //16px
$spacing-3: ($spacing * 3);     //24px
$spacing-4: ($spacing * 4);     //32px
*/
/*
Difference between mixins, functions and extends???s
*/
/*
1) Mobile First
Your small screen styles are in your regular screen CSS and then as the screen gets larger you override what you need to. So, min-width media queries in general.

html { font-size: 16px; }

@media (min-width: 600px) {
  html { font-size: 20px; }
}

2) Desktop First
Your large screen styles are in your regular screen CSS and then as the screen gets smaller you override what you need to. So, max-width media queries in general.

html { font-size: 20px; }

@media (max-width: 600px) {
  html { font-size: 16px; }
}
*/
/*
0 - 600:    phone-only
600 - 900:  tablet-portrait-up
900 - 1200: tablet-landscape-up
1800+:      big-desktop-up

Between 1200 and 1800, our normal styles apply


Responsive changes order:
base + typography > general layout + grid > page layout > individual components


*/
/*
@mixin respond-to($breakpoint) {
    @if $breakpoint == phone-only {
        @media (max-width: 600px) { @content; }
        
    } @else if $breakpoint == tablet-portrait-up {
        @media (max-width: 900px) { @content; }
        
    } @else if $breakpoint == tablet-landscape-up {
        @media (max-width: 1200px) { @content; }
        
    } @else if $breakpoint == big-desktop-up {
        @media (min-width: 1800px) { @content; }
    }
}
*/
* {
  margin: 0;
  padding: 0; }

html {
  /* 10px/16px = 62.5% */
  box-sizing: border-box;
  overflow-x: hidden; }

*, *:before, *:after {
  box-sizing: inherit; }

body {
  padding: 3rem;
  overflow-x: hidden;
  counter-reset: nav-counter; }
  @media (max-width: 56.25em) {
    body {
      padding: 0; } }

::selection {
  background-color: #55c57a;
  color: #fff; }

/*******************************/
/* Base typography */
html {
  /* 10px/16px = 62.5% */
  font-size: 62.5%; }
  @media (max-width: 75em) {
    html {
      font-size: 56.25%; } }
  @media (max-width: 56.25em) {
    html {
      font-size: 50%; } }
  @media (min-width: 112.5em) {
    html {
      font-size: 75%; } }

body {
  line-height: 1.7;
  font-weight: 400;
  font-family: 'Lato', sans-serif;
  color: #777; }
  @media (max-width: 75em) {
    body {
      line-height: 1.5; } }

/*******************************/
/* General paragraphs */
.parapraph {
  font-size: 1.6rem; }
  .parapraph:not(:last-child) {
    margin-bottom: 3rem; }

/*******************************/
/* Primary heading */
.heading-primary {
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 7rem; }
  .heading-primary--main {
    font-size: 6rem;
    display: block;
    letter-spacing: 3.4rem;
    font-weight: 400;
    margin-left: 1.6rem;
    /*Animatoion different properties: these two are the only required properties, the others are optional*/
    animation-name: moveInLeft;
    animation-duration: 1s;
    /*Other properties*/
    animation-timing-function: ease-out;
    /*
        animation-iteration-count: 6;
        animation-direction: alternate;
        */
    /*
        &:first-letter {
            padding-left: 3.4rem;
            
            @include respond-to(phone-only) {
                padding-left: 1rem;
            }
        }
        */ }
    @media (max-width: 37.5em) {
      .heading-primary--main {
        font-size: 5rem;
        letter-spacing: 1rem; } }
  .heading-primary--sub {
    font-size: 2rem;
    display: block;
    letter-spacing: 1.65rem;
    font-weight: 700;
    animation: moveInRight 1s ease-out;
    /*
        &:first-letter {
            padding-left: 1.65rem;
            
            @include respond-to(phone-only) {
                padding-left: .5rem;
            }
        }
        */ }
    @media (max-width: 37.5em) {
      .heading-primary--sub {
        letter-spacing: .5rem; } }

/*******************************/
/* Secondary heading */
.heading-secondary {
  font-size: 3.5rem;
  display: inline-block;
  text-transform: uppercase;
  /* REMOVE LATER FOR THE FEATURE QUERY
    background-image: linear-gradient(to right, #7dd56f, #28b487);
    -webkit-background-clip: text;
    color: transparent;
    */
  color: #55c57a;
  font-weight: 700;
  letter-spacing: 2px;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }
  @media (max-width: 56.25em) {
    .heading-secondary {
      font-size: 3rem; } }
  @media (max-width: 37.5em) {
    .heading-secondary {
      font-size: 2.5rem; } }

/*
With @supports, you can write a small test in your CSS to see whether or not a particular “feature” (CSS property or value) is supported, and apply a block of code (or not) based on the answer.
*/
@supports (-webkit-background-clip: text) {
  .heading-secondary {
    background-image: linear-gradient(to right, #7dd56f, #28b487);
    -webkit-background-clip: text;
    color: transparent; } }

/*******************************/
/* Tertiary heading */
.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase;
  margin-bottom: 1.5rem; }

/*
I distinguish between utility and component classes. For components I use BEM, and for utilty classes I just use the u-suffix.
utility classes, that can also be called helper classes, are just very small classes that we can use when we don't want to create a whoe new component.
*/
.u-left {
  float: left !important; }

.u-center-text {
  text-align: center !important; }

.u-margin-top-8 {
  margin-top: .8rem !important; }

.u-margin-top-16 {
  margin-top: 1.6rem !important; }

.u-margin-top-32 {
  margin-top: 3.2rem !important; }

.u-margin-top-64 {
  margin-top: 6.4rem !important; }

.u-margin-top-80 {
  margin-top: 8rem !important; }

.u-margin-top-96 {
  margin-top: 9.6rem !important; }

.u-margin-bottom-8 {
  margin-bottom: .8rem !important; }

.u-margin-bottom-16 {
  margin-bottom: 1.6rem !important; }

.u-margin-bottom-32 {
  margin-bottom: 3.2rem !important; }

.u-margin-bottom-64 {
  margin-bottom: 6.4rem !important; }

.u-margin-bottom-80 {
  margin-bottom: 8rem !important; }

.u-margin-bottom-96 {
  margin-bottom: 9.6rem !important; }

.u-bold {
  font-weight: 700 !important; }

.u-line-height-1 {
  line-height: 1 !important; }

.u-font-size-16 {
  font-size: 1.6rem !important; }

/*let's do some animations: for performance, animating transform and opacity are the best*/
@keyframes moveInLeft {
  0% {
    transform: translateX(-10rem);
    opacity: 0; }
  80% {
    transform: translateX(1rem); }
  100% {
    transform: translateX(0);
    opacity: 1; } }

@keyframes moveInRight {
  0% {
    transform: translateX(10rem);
    opacity: 0; }
  80% {
    transform: translateX(-1rem); }
  100% {
    transform: translateX(0);
    opacity: 1; } }

@keyframes moveInBottom {
  0% {
    transform: translateY(3rem);
    opacity: 0; }
  100% {
    transform: translateY(0);
    opacity: 1; } }

/*Add a class only for animations*/
.animate--moveInBottom {
  animation: moveInBottom .5s ease-out .8s;
  animation-fill-mode: backwards;
  /*This means that the styles of 0% are applied BEFORE the animation starts*/ }

/******************************************************
Very simple fluid grid
******************************************************/
.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
    @media (max-width: 56.25em) {
      .row:not(:last-child) {
        margin-bottom: 6rem; } }
  .row::after {
    content: '';
    display: table;
    clear: both; }
  @media (max-width: 81.25em) {
    .row {
      padding: 3rem; } }
  @media (max-width: 56.25em) {
    .row {
      max-width: 55rem; } }

[class^="col-"] {
  float: left;
  /*
    background-color: green;
    font-size: 1.5rem;
    color: #fff;
    */ }
  [class^="col-"]:not(:last-child) {
    margin-right: 6rem; }
    @media (max-width: 56.25em) {
      [class^="col-"]:not(:last-child) {
        margin-right: 0;
        margin-bottom: 6rem; } }
  @media (max-width: 56.25em) {
    [class^="col-"] {
      width: 100% !important; } }

/* 2 Columns */
.col-1-of-2 {
  width: calc((100% - 1 * 6rem) / 2); }

/* 3 Columns */
.col-1-of-3 {
  width: calc((100% - 2 * 6rem) / 3); }

.col-2-of-3 {
  width: calc(2 * ((100% - 2 * 6rem) / 3) + 1 * 6rem); }

/* 4 Columns */
.col-1-of-4 {
  width: calc((100% - 3 * 6rem) / 4); }

.col-2-of-4 {
  width: calc(2 * ((100% - 3 * 6rem) / 4) + 1 * 6rem); }

.col-3-of-4 {
  width: calc(3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }

.header {
  height: 90vh;
  background-image: linear-gradient(to right bottom, rgba(125, 213, 111, 0.8), rgba(40, 180, 135, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  position: relative;
  z-index: 20; }
  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    .header {
      clip-path: polygon(0 0, 100% 0%, 100% 75vh, 0% 100%);
      -webkit-clip-path: polygon(0 0, 100% 0%, 100% 75vh, 0% 100%);
      height: 95vh; } }
  @media (max-width: 37.5em) {
    @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
      .header {
        clip-path: polygon(0 0, 100% 0%, 100% 90vh, 0% 100%);
        -webkit-clip-path: polygon(0 0, 100% 0%, 100% 90vh, 0% 100%);
        height: 100vh; } } }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -40%);
    text-align: center; }
    @media (max-width: 37.5em) {
      .header__text-box {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%); } }

/*
WITHOUT SASS
@supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    .header {
        clip-path: polygon(0 0, 100% 0%, 100% 75vh, 0% 100%);
        -webkit-clip-path: polygon(0 0, 100% 0%, 100% 75vh, 0% 100%);
        height: 95vh;
    }
}
*/
.footer {
  background-color: #333;
  padding: 10rem 0;
  font-size: 1.4rem;
  color: #eee; }
  .footer__logo-box {
    text-align: center;
    margin-bottom: 8rem; }
    @media (max-width: 56.25em) {
      .footer__logo-box {
        margin-bottom: 4rem; } }
  .footer__logo {
    width: 15rem;
    height: auto; }
  .footer__navigation {
    border-top: 1px solid #777;
    padding-top: 2rem;
    display: inline-block; }
    @media (max-width: 56.25em) {
      .footer__navigation {
        width: 100%;
        display: block;
        text-align: center; } }
  .footer__list {
    list-style: none; }
  .footer__item {
    display: inline-block;
    margin-right: 1.5rem; }
    .footer__item:last-child {
      margin: 0; }
  .footer__link:link, .footer__link:visited {
    color: #f7f7f7;
    text-decoration: none;
    text-transform: uppercase;
    transition: all .2s;
    display: inline-block; }
  .footer__link:hover, .footer__link:active {
    transform: rotate(5deg) scale(1.25);
    background-color: #333;
    color: #55c57a;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.4); }
  .footer__copyright {
    width: 80%;
    float: right;
    border-top: 1px solid #777;
    padding-top: 2rem; }
    @media (max-width: 56.25em) {
      .footer__copyright {
        width: 100%;
        float: none; } }

/*******************************/
/* Navigation */
.navigation {
  /*Open state*/
  /*Navigation icon*/
  /*Navigation icon hover state*/
  /*Navigation icon open state*/ }
  .navigation__checkbox {
    display: none; }
  .navigation__button {
    position: fixed;
    top: 6rem;
    right: 6rem;
    height: 7rem;
    width: 7rem;
    border-radius: 50%;
    background-color: #fff;
    box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.07);
    transition: all .2s;
    z-index: 9999;
    cursor: pointer;
    text-align: center; }
    @media (max-width: 56.25em) {
      .navigation__button {
        top: 4rem;
        right: 4rem; } }
  .navigation__background {
    position: fixed;
    top: 6.5rem;
    right: 6.5rem;
    height: 6rem;
    width: 6rem;
    border-radius: 50%;
    background-image: radial-gradient(#7dd56f, #28b487);
    transition-property: transform;
    transition-duration: .4s;
    transition-timing-function: ease-in-out;
    z-index: 1000; }
    @media (max-width: 56.25em) {
      .navigation__background {
        top: 4.5rem;
        right: 4.5rem; } }
  .navigation__nav {
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
    /*width: 100%;*/
    z-index: 2000;
    /*Only with opacity 0, the links still stay there*/
    opacity: 0;
    width: 0;
    overflow: hidden;
    transition: all 0.3s cubic-bezier(0.28, 0.36, 0.24, 1.22) 0.2s; }
  .navigation__list {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    list-style: none;
    text-align: center;
    width: 100%; }
  .navigation__item {
    margin: 1rem; }
  .navigation__link:link, .navigation__link:visited {
    display: inline-block;
    font-size: 3rem;
    font-weight: 300;
    color: #fff;
    padding: 1rem 2rem;
    text-decoration: none;
    text-transform: uppercase;
    counter-increment: nav-counter;
    background-image: linear-gradient(120deg, transparent, transparent 50%, #fff 50%);
    background-size: 220%;
    background-position: 0;
    will-change: transform, color, background-position;
    transition: all .4s; }
    .navigation__link:link::before, .navigation__link:visited::before {
      content: "0" counter(nav-counter);
      display: inline-block;
      margin-right: 1.5rem; }
  .navigation__link:hover, .navigation__link:active {
    transform: translateX(1rem);
    color: #55c57a;
    background-position: 100%; }
  .navigation__checkbox:checked ~ .navigation__background {
    transform: scale(75) translateZ(0); }
  .navigation__checkbox:checked ~ .navigation__nav {
    opacity: 1;
    width: 100%;
    overflow: visible; }
  .navigation__icon, .navigation__icon::before, .navigation__icon::after {
    display: inline-block;
    background-color: #333;
    width: 3rem;
    height: 2px;
    transition: all .2s; }
  .navigation__icon {
    position: relative;
    margin-top: 3.5rem; }
    .navigation__icon::before, .navigation__icon::after {
      content: "";
      position: absolute;
      left: 0; }
    .navigation__icon::before {
      top: -.8rem;
      transform-origin: center; }
    .navigation__icon::after {
      top: .8rem;
      transform-origin: center; }
  .navigation__button:hover .navigation__icon::before {
    top: -1rem; }
  .navigation__button:hover .navigation__icon::after {
    top: 1rem; }
  .navigation__checkbox:checked ~ .navigation__button .navigation__icon {
    background: transparent; }
  .navigation__checkbox:checked ~ .navigation__button .navigation__icon::before {
    transform: rotate(135deg);
    /*First with 45*/
    top: 0; }
  .navigation__checkbox:checked ~ .navigation__button .navigation__icon::after {
    transform: rotate(-135deg);
    top: 0; }

.section-about {
  /*
    padding: 24rem 0 26rem 0;
    margin-top: -20vh;
    */
  padding: 15rem 0 25rem 0;
  background-color: #f7f7f7;
  position: relative;
  z-index: 10; }
  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    .section-about {
      padding: 25rem 0;
      margin-top: -20vh; } }
  @media (max-width: 75em) {
    .section-about {
      padding: 15rem 0 20rem 0; } }

/*
@supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    
    .section-about {
        padding: 25rem 0;
        margin-top: -20vh;
    }
}
*/
.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(125, 213, 111, 0.8), rgba(40, 180, 135, 0.8)), url(../img/nat-4.jpg);
  background-size: cover;
  transform: skewY(-7deg);
  position: relative;
  z-index: 20;
  margin: -9rem 0; }
  .section-features > * {
    transform: skewY(7deg); }
  @media (max-width: 75em) {
    .section-features {
      padding: 15rem 0; } }

.section-tours {
  padding: 25rem 0 15rem 0;
  background-color: #f7f7f7; }
  @media (max-width: 75em) {
    .section-tours {
      padding: 20rem 0 10rem 0; } }

/*
.section-stories {
    padding: 15rem 0;
    background-image: linear-gradient(to bottom, rgba($color-white, 0.88), rgba($color-white, 0.88)), url('../img/nat-6.jpg');
    background-size: cover;
    background-attachment: fixed;
    font-size: 1.6rem;
    
    @include respond-to(tablet-landscape-up) {
        padding: 10rem 0;
    }
}
*/
.section-stories {
  padding: 15rem 0;
  position: relative;
  font-size: 1.6rem; }
  @media (max-width: 75em) {
    .section-stories {
      padding: 10rem 0; } }

.section-book {
  padding: 15rem 0;
  background-image: linear-gradient(to right bottom, #7dd56f, #28b487); }
  @media (max-width: 75em) {
    .section-book {
      padding: 10rem 0; } }

/*This one is a bit difficult to categorize, but I put it here in the layouts folder/file, because in fact this is not reusable, and all it does is in helping woth the layout.*/
.book {
  background-color: #fff;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  border-radius: 2px;
  background-image: linear-gradient(102deg, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.9) 50%, transparent 50%), url(../img/nat-10.jpg);
  /*These percentages are the points at which we want to see color X*/
  /*background-size: cover;*/
  background-size: 100%;
  /*Sets the width, so 100% is like cover*/
  background-position: 50% 50%, 50% 30%;
  /*50% means it will align the middle of the image with the middle of the container. 100% means it will align the last pixel of the image with the last pixel of the container, and so on.*/
  transition: all .3s; }
  .book:hover {
    background-size: 200%, 105%;
    background-position: 49% 50%, 50% 30%; }
  .book__form {
    width: 50%;
    padding: 6rem 5rem; }

.bg-video {
  position: absolute;
  left: 0;
  top: 0;
  z-index: -1;
  opacity: .15;
  height: 100%;
  width: 100%;
  overflow: hidden; }

.bg-video__content {
  object-fit: cover;
  height: 100%;
  width: 100%; }

/*
First video
.bg-video {
  position: absolute;
  left: 0;
  top: 0;
  z-index: -1;
  opacity: .15;
  height: 100%;
  width: 100%;
  object-fit: cover;
}

*/
/*******************************/
/* Regular button */
.btn, .btn:link, .btn:visited {
  font-size: 1.6rem;
  padding: 1.5rem 4rem;
  border-radius: 10rem;
  text-transform: uppercase;
  display: inline-block;
  text-decoration: none;
  position: relative;
  transition: all .4s;
  backface-visibility: hidden;
  /*Add later when we use this for the button in form*/
  border: none;
  cursor: pointer; }

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15); }

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15); }

.btn:focus {
  outline: none; }

.btn::after {
  content: "";
  display: inline-block;
  position: absolute;
  bottom: 0;
  left: 0;
  border-radius: 10rem;
  height: 100%;
  width: 100%;
  transition: all .4s ease-out;
  z-index: -1; }

.btn:hover::after {
  transform: scaleY(1.6) scaleX(1.4);
  opacity: 0; }

.btn--white {
  background-color: #fff;
  color: #777; }
  .btn--white::after {
    background-color: #fff; }

.btn--green {
  background-color: #55c57a;
  color: #fff; }
  .btn--green::after {
    background-color: #55c57a; }

/*******************************/
/* Text button (this is not a variation of the normal button, but a whole new component)*/
.btn-text:link, .btn-text:visited {
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  transition: all .2s; }

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  transform: translateY(0);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15); }

.btn-text:focus {
  outline: none; }

/*Functionality*/
.card {
  -moz-perspective: 1500px;
  perspective: 150rem;
  width: 100%;
  /*Styling the front part*/
  /*Styling the back part*/ }
  .card .btn {
    backface-visibility: visible; }
  .card__container {
    position: relative;
    /*To prevent the element from collapsing*/ }
    .card__container::after {
      content: "";
      display: block;
      height: 51rem; }
  .card__content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    /*This is necessary because both sides need to have the same height*/
    height: 51rem;
    border-radius: 3px;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    /*Clip path breaks this in chrome*/
    overflow: hidden;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
    transition: transform .8s ease; }
    .card__content--front {
      background-color: #fff; }
    .card__content--back {
      transform: rotateY(180deg);
      color: #fff; }
      .card__content--back-1 {
        background-image: linear-gradient(to bottom right, #ffb900, #ff7730); }
      .card__content--back-2 {
        background-image: linear-gradient(to right bottom, #7dd56f, #28b487); }
      .card__content--back-3 {
        background-image: linear-gradient(to bottom right, #2998ff, #5643fa); }
  .card__container:hover .card__content--front {
    transform: rotateY(-180deg); }
  .card__container:hover .card__content--back {
    transform: rotateY(0); }
  .card__picture {
    height: 23rem;
    background-size: cover;
    background-position: center;
    background-blend-mode: screen;
    -webkit-clip-path: polygon(0 0, 101% 0%, 101% 85%, 0% 100%);
    clip-path: polygon(0 0, 101% 0%, 101% 85%, 0% 100%);
    border-top-left-radius: 3px;
    border-top-right-radius: 3px; }
    .card__picture--1 {
      background-image: linear-gradient(to bottom right, #ffb900, #ff7730), url("../img/nat-5.jpg"); }
    .card__picture--2 {
      background-image: linear-gradient(to right bottom, #7dd56f, #28b487), url("../img/nat-6.jpg"); }
    .card__picture--3 {
      background-image: linear-gradient(to bottom right, #2998ff, #5643fa), url("../img/nat-7.jpg"); }
  .card__details {
    padding: 3rem; }
  .card__heading {
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%;
    color: #fff;
    text-transform: uppercase;
    font-weight: 300;
    font-size: 2.75rem;
    text-align: right;
    z-index: 10; }
    @media (max-width: 56.25em) {
      .card__heading {
        top: 16.5rem; } }
  .card__heading-span {
    padding: 1rem 1.5rem;
    line-height: 1;
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone; }
    .card__heading-span--1 {
      background-image: linear-gradient(to bottom right, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85)); }
    .card__heading-span--2 {
      background-image: linear-gradient(to bottom right, rgba(125, 213, 111, 0.85), rgba(40, 180, 135, 0.85)); }
    .card__heading-span--3 {
      background-image: linear-gradient(to bottom right, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85)); }
  .card__list {
    list-style: none;
    width: 80%;
    margin: 0 auto; }
  .card__item {
    text-align: center;
    font-size: 1.5rem;
    padding: 1rem 0;
    display: block; }
    .card__item:not(:last-child) {
      border-bottom: 1px solid #eee; }
  .card__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 90%;
    text-align: center;
    transform: translate(-50%, -50%); }
  .card__price-box {
    margin-bottom: 8rem;
    text-align: center; }
  .card__price-only {
    font-size: 1.4rem;
    text-transform: uppercase;
    display: block; }
  .card__price-value {
    font-size: 6rem;
    font-weight: 100; }

@media (max-width: 75em) {
  /*Functionality*/
  .card {
    /*Styling the back part*/ }
    .card__container {
      position: relative;
      box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
      border-radius: 3px;
      background-color: #fff; }
      .card__container::after {
        height: auto; }
    .card__content {
      position: relative;
      box-shadow: none;
      border-radius: 0;
      height: auto; }
      .card__content--back {
        transform: rotateY(0);
        clip-path: polygon(0 15%, 100% 0%, 100% 100%, 0% 100%); }
    .card__container:hover .card__content--front {
      transform: rotateY(0); }
    .card__container:hover .card__content--back {
      transform: rotateY(0); }
    .card__cta {
      position: relative;
      top: 0;
      left: 0;
      width: 100%;
      text-align: center;
      transform: translate(0);
      padding: 7rem 0 4rem; }
    .card__price-box {
      margin-bottom: 3rem; }
    .card__price-value {
      font-size: 4rem; } }

.composition {
  position: relative;
  width: 100%; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    position: absolute;
    outline-offset: 2rem;
    border-radius: 2px;
    z-index: 10;
    transition: all .2s; }
    @media (max-width: 56.25em) {
      .composition__photo {
        width: 33.33333333%;
        position: relative;
        display: block;
        float: left;
        box-shadow: 0 1.5rem 3rem rgba(0, 0, 0, 0.2);
        border-radius: 0; } }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
      @media (max-width: 56.25em) {
        .composition__photo--p1 {
          top: 0;
          transform: scale(1.2); } }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
      @media (max-width: 56.25em) {
        .composition__photo--p2 {
          top: -1.5rem;
          transform: scale(1.3);
          z-index: 20; } }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
      @media (max-width: 56.25em) {
        .composition__photo--p3 {
          left: 0;
          top: 1rem;
          transform: scale(1.1); } }
  .composition__photo:hover {
    outline: 1.5rem solid #55c57a;
    z-index: 20;
    box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
    transform: translateY(-0.5rem) scale(1.05); }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.95); }

.feature-box {
  font-size: 1.5rem;
  background-color: rgba(255, 255, 255, 0.8);
  padding: 2.5rem;
  text-align: center;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  border-radius: 3px;
  transition: transform .3s;
  /*
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(10px);
    */ }
  .feature-box__icon {
    text-align: center;
    font-size: 6rem;
    background-image: linear-gradient(to right, #7dd56f, #28b487);
    display: inline-block;
    -webkit-background-clip: text;
    color: transparent;
    margin-bottom: .5rem; }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03); }

/*We're creating a new component here because we might want to reuse this form or some of its elements outside the book section, and so we make it its own component*/
.form__group:not(:last-child) {
  margin-bottom: 2rem; }

.form__input {
  display: block;
  font-family: inherit;
  font-size: 1.5rem;
  color: inherit;
  padding: 1.5rem 2rem;
  border: none;
  width: 90%;
  background-color: rgba(255, 255, 255, 0.5);
  border-top: 3px solid transparent;
  border-bottom: 3px solid transparent;
  transition: all .3s;
  border-radius: 2px;
  /* Pseudo element (a visible thing that isn't really in the DOM).
        Also needs -ms- */ }
  .form__input:focus {
    outline: none;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.1);
    border-bottom: 3px solid #55c57a; }
  .form__input:focus:invalid {
    border-bottom: 3px solid #ff7730; }
  .form__input::-webkit-input-placeholder {
    color: #999; }

.form__label {
  display: block;
  font-size: 1.2rem;
  font-weight: 700;
  margin-left: 2rem;
  margin-top: .7rem;
  transition: all .3s; }

.form__input:placeholder-shown + .form__label {
  opacity: 0;
  visibility: hidden;
  transform: translateY(-4rem); }

.form__radio-group {
  width: 49%;
  position: relative;
  display: inline-block; }

.form__radio-input {
  display: none; }

.form__radio-label {
  font-size: 1.6rem;
  cursor: pointer;
  /*This part is essential, because it will allow us to click on the NEW radio button*/
  display: inline-block;
  padding-left: 4.5rem; }

.form__radio-element {
  display: block;
  position: absolute;
  left: 0;
  top: -.1rem;
  height: 3rem;
  width: 3rem;
  border: 5px solid #55c57a;
  border-radius: 50%; }
  .form__radio-element::after {
    content: '';
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    height: 1.3rem;
    width: 1.3rem;
    background-color: #55c57a;
    transform: translate(-50%, -50%);
    border-radius: 50%;
    opacity: 0;
    transition: opacity .2s; }

.form__radio-input:checked ~ .form__radio-label > .form__radio-element::after {
  opacity: 1; }

.popup {
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 9999;
  background-color: rgba(0, 0, 0, 0.9);
  /*
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(10px);
    */
  opacity: 0;
  visibility: hidden;
  transition: all .3s;
  /*show with floats, doesn't work*/ }
  .popup__content {
    width: 75%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.5);
    background-color: #fff;
    display: table;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
    border-radius: 3px;
    overflow: hidden;
    opacity: 0;
    transition: all .3s .2s; }
  .popup:target {
    opacity: 1;
    visibility: visible; }
  .popup:target .popup__content {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1); }
  .popup__left {
    width: 33.3333333%;
    display: table-cell; }
  .popup__right {
    width: 66.6666667%;
    display: table-cell;
    vertical-align: middle;
    padding: 3rem 5rem; }
  .popup__img {
    width: 100%;
    display: block;
    object-fit: cover; }
  .popup__close:link, .popup__close:visited {
    color: #777;
    position: absolute;
    top: 2.5rem;
    right: 2.5rem;
    font-size: 3rem;
    text-decoration: none;
    display: inline-block;
    line-height: 1;
    transition: all .2s; }
  .popup__close:hover {
    color: #55c57a; }
  .popup__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;
    /*
        -moz-column-count: 2;
        -moz-column-gap: 4rem;
        -moz-column-rule: 1px solid $color-grey-light-1;
        */
    column-count: 2;
    column-gap: 4rem;
    column-rule: 1px solid #f7f7f7;
    hyphens: auto; }

@supports (-webkit-backdrop-filter: blur(10px)) or (backdrop-filter: blur(10px)) {
  .popup {
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(10px);
    background-color: rgba(0, 0, 0, 0.4); } }

.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.06);
  border-radius: 3px;
  padding: 6rem 6rem 6rem 9rem;
  transform: skewX(-12deg);
  background-color: rgba(255, 255, 255, 0.5); }
  @media (max-width: 56.25em) {
    .story {
      width: 100%; } }
  @media (max-width: 37.5em) {
    .story {
      transform: skewX(0);
      padding: 4rem 4rem 4rem 7rem; } }
  .story:not(:last-child) {
    margin-bottom: 6rem; }
  .story__shape {
    height: 15rem;
    width: 15rem;
    float: left;
    transform: translateX(-3rem) skewX(12deg);
    /*This only defines where other elements should flow around the element, nothing else.*/
    /*Default is margin-box. But we need this one because otherwise the margins will not work as expected*/
    shape-outside: circle(50% at 50% 50%);
    position: relative;
    overflow: hidden;
    /*border-radius: 50%;*/
    /*background-color: red;*/
    -webkit-clip-path: circle(50% at 50% 50%);
    /*Show diff values*/
    clip-path: circle(50% at 50% 50%);
    /*Show diff values*/
    transition: all .3s;
    /*Try with other shapes*/ }
    @media (max-width: 37.5em) {
      .story__shape {
        transform: translateX(-3rem) skewX(0); } }
  .story__img {
    height: 100%;
    transform: translateX(-4rem) scale(1.3);
    /*transform-origin: center right;*/
    transition: all .3s;
    backface-visibility: hidden; }
  .story__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 0);
    opacity: 0;
    color: #fff;
    font-size: 1.7rem;
    line-height: 1.5;
    text-transform: uppercase;
    text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);
    text-align: center;
    transition: all .5s;
    backface-visibility: hidden; }
  .story:hover .story__img {
    transform: translateX(-4rem) scale(1);
    filter: blur(3px) brightness(90%); }
  .story:hover .story__caption {
    transform: translate(-50%, -50%);
    opacity: 1; }
  .story__text {
    transform: skewX(12deg);
    font-size: 1.6rem; }
    @media (max-width: 37.5em) {
      .story__text {
        transform: skewX(0); } }

/*
----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------
FOLDER/FILE STRUCTURE


BASE FOLDER
The base/ folder holds what we might call the boilerplate code for the project. In there, you might find the reset file, some typographic rules, and probably a stylesheet defining some standard styles for commonly used HTML elements (that I like to call _base.scss).


LAYOUT FOLDER
The layout/ folder contains everything that takes part in laying out the site or application. This folder could have stylesheets for the main parts of the site (header, footer, navigation, sidebar…), the grid system or even CSS styles for all the forms.


COMPONENTS FOLDER (ORGANISMS IN ATOMIC DESIGN)
For smaller components, there is the components/ folder. While layout/ is macro (defining the global wireframe), components/ is more focused on widgets. It contains all kind of specific modules like a slider, a loader, a widget, and basically anything along those lines. There are usually a lot of files in components/ since the whole site/application should be mostly composed of tiny modules.

_media.scss
_carousel.scss
_thumbnails.scss


PAGES FOLDER
If you have page-specific styles, it is better to put them in a pages/ folder, in a file named after the page. For instance, it’s not uncommon to have very specific styles for the home page hence the need for a _home.scss file in pages/.


THEMES FOLDER
On large sites and applications, it is not unusual to have different themes. There are certainly different ways of dealing with themes but I personally like having them all in a themes/ folder.
_theme.scss
_admin.scss


ABSTRACTS FOLDER
The abstracts/ folder gathers all Sass tools and helpers used across the project. Every global variable, function, mixin abd placeholder should be put in here.

>>>>>The rule of thumb for this folder is that it should not output a single line of CSS when compiled on its own. These are nothing but Sass helpers.

When working on a very large project with a lot of abstract utilities, it might be interesting to group them by topic rather than type, for instance typography (_typography.scss), theming (_theming.scss), etc. Each file contains all the related helpers: variables, functions, mixins and placeholders. Doing so can make the code easier to browse and maintain, especially when files are getting very long.

The abstracts/ folder might also be called utilities/ or helpers/, depending on what you prefer.


VENDORS FOLDER
And last but not least, most projects will have a vendors/ folder containing all the CSS files from external libraries and frameworks – Normalize, Bootstrap, jQueryUI, FancyCarouselSliderjQueryPowered, and so on. Putting those aside in the same folder is a good way to say “Hey, this is not from me, not my code, not my responsibility”.

_normalize.scss
_bootstrap.scss
_jquery-ui.scss
_select2.scss
*/
/*
----------------------------------------------
shape-outside: polygon()
polygon/circle/ellips/inset
- Only Chrome/Safari
-Safari needs -webkit-
-Can be animated
-Element must be floated
-Element must have dimensions

----------------------------------------------

clip-path: polygon()
polygin/ciclr/ellips/inset
-No IE/Edge
Clips are always vecotrs, while masks are images (can even be gradients)
mask-image: linear-gradient() / url()
- There are many other properties, and they are similar to the background: mask-size, mask-position, mask-repeat, etc
- No IE/Edge, -webkit- for Chrome and Safari
mask-border

----------------------------------------------

background-clip: border-box/content-box/padding-box/TEXT!!!!
- Defines the area of the element where the background is applied.
- Text doesn't work in firefox

----------------------------------------------

background-blend-mode: multiply/screen/overlay/...
-No IE/Edge
-Use with mutiple background images or with a bg color
-We can use multiple with , one per bg image
mix-blend-mode

----------------------------------------------

filter: blur, brightness, contrast, sepia, etc
- The filter property applies visual effects to elements, like images
- No IE

----------------------------------------------

-webkit-backdrop-filter
- Only Safari, Chrome behind flag
- Like filter property, but instead of applying them to the element itself, they’re applied to whatever is behind the element.

----------------------------------------------


box-decoration-break: clone/slice
-No IE/EDGE, use with -webkit-
-For inline elements
-Apply the styling to each line separately, instead of the whole element.

----------------------------------------------

column-count: 3;
column-gap: 25px;
column-rule: 1px solid #454545;
- needs -moz- prefix

----------------------------------------------

body {
  counter-reset: heading;
}
h2 {
  counter-increment: heading;
}
h2:before {
  content: counter(heading) " - ";
}

----------------------------------------------

hyphens: none/auto/manual
- &shy; - will let the browser know that it's a place in text where the hyphenation may be performed if necessary
- &hyphen; - will render the hyphen even if the line is not broken
- -ms- for IE and Edge

----------------------------------------------

object-fit: fill/contain/cover/none/scale-down
- How an image (<img>) element is fitted into the box established by its height and widt
pointer-events: auto/none
position: sticky/ -webkit-sticky
will-change: <properties,> instead of transform: translate3d(0, 0, 0);
outline-offset
- Doesnt work in IE

----------------------------------------------

RESPONSIVE IMAGES
A method for providing the browser with multiple image sources depending on display density, size of the image element in the page, or any number of other factors.
2 BIG USE CASES:
1) Resolution switching: provide different sizes of the same image, without making any modifications to the content or aspect ratio of the image. This can be based on the viewport AND/OR display density (retina images)
2) Art direction: when we need to make changes to the content, like cropping or changing aspect ratio
*/
